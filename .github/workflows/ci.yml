---
name: ci

on:
  push:
    branches:
      - main
    tags-ignore:
      - "*"
  pull_request:
    branches:
      - main
  workflow_dispatch: {}
  schedule:
    - cron: 0 18 * * *

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  dotnet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x
#      - run: dotnet workload install wasm-experimental
#      - run: mkdir -p build/wasm-api && curl https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-21/wasi-sdk-21.0-linux.tar.gz -sSL | tar xfz - -C build/wasm-api/
#      - run: dotnet build -c Release /p:RuntimeIdentifier=wasi-wasm /p:WasmSingleFileBundle=true wasm
#        env:
#          WASI_SDK_PATH: ${{ github.workspace }}/build/wasm-api/wasi-sdk-21.0
      - name: Build wasm
        run: |
          dotnet workload install wasi-experimental
          mkdir -p build/wasm-api
          curl -L https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-20/wasi-sdk-20.0-linux.tar.gz -sSL | tar xfz - -C build/wasm-api/
          export WASI_SDK_PATH=`pwd`/build/wasm-api/wasi-sdk-20.0
          dotnet build -c Release wasm
      - run: find . -type f -name '*.wasm' | xargs ls -lh
#  build:
#    needs: [dotnet]
#    uses: openrewrite/gh-automation/.github/workflows/ci-gradle.yml@main
#    secrets:
#      gradle_enterprise_access_key: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
#      gradle_enterprise_cache_username: ${{ secrets.GRADLE_ENTERPRISE_CACHE_USERNAME }}
#      gradle_enterprise_cache_password: ${{ secrets.GRADLE_ENTERPRISE_CACHE_PASSWORD }}
#      ossrh_username: ${{ secrets.OSSRH_USERNAME }}
#      ossrh_token: ${{ secrets.OSSRH_TOKEN }}
#      ossrh_signing_key: ${{ secrets.OSSRH_SIGNING_KEY }}
#      ossrh_signing_password: ${{ secrets.OSSRH_SIGNING_PASSWORD }}
